import logging
from aiogram import Bot, Dispatcher, types
from aiogram.types import WebAppInfo, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils import executor
import asyncio
import os

# ===============================
# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
# ===============================

# ‚öôÔ∏è –í—Å—Ç–∞–≤—å —Å–≤–æ–π —Ç–æ–∫–µ–Ω –æ—Ç BotFather
BOT_TOKEN = os.getenv("8453726026:AAE2xfG2oQGDzul1glzPcEdP4NDEAC1Kwlc")

# üåê URL —Ç–≤–æ–µ–≥–æ —Å–∞–π—Ç–∞ / Web App (–Ω–∞–ø—Ä–∏–º–µ—Ä Render –∏–ª–∏ Netlify)
WEBAPP_URL = os.getenv("https://giftroulette1.netlify.app/")

# ===============================
# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–æ–≤
# ===============================
logging.basicConfig(level=logging.INFO)

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher(bot)


# ===============================
# –ö–æ–º–∞–Ω–¥—ã
# ===============================
@dp.message_handler(commands=["start"])
async def start_command(message: types.Message):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ –∫–Ω–æ–ø–∫—É –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è Web App.
    """
    keyboard = InlineKeyboardMarkup()
    webapp_button = InlineKeyboardButton(
        text="üéÅ –û—Ç–∫—Ä—ã—Ç—å Gifts Battle",
        web_app=WebAppInfo(url=WEBAPP_URL)
    )
    keyboard.add(webapp_button)

    await message.answer(
        f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}! üëã\n"
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ *Gifts Battle*! üéÅ\n"
        "–ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –∏–≥—Ä—É:",
        parse_mode="Markdown",
        reply_markup=keyboard
    )


@dp.message_handler(commands=["help"])
async def help_command(message: types.Message):
    await message.answer(
        "‚öôÔ∏è –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
        "/start ‚Äî –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É üéÆ\n"
        "/help ‚Äî —Å–ø—Ä–∞–≤–∫–∞ üìñ"
    )


# ===============================
# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç WebApp
# ===============================
@dp.message_handler(content_types=types.ContentType.WEB_APP_DATA)
async def webapp_message(message: types.Message):
    """
    –ü–æ–ª—É—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ WebApp (–Ω–∞–ø—Ä–∏–º–µ—Ä, –æ—á–∫–∏, –≤—ã–±–æ—Ä –ø–æ–¥–∞—Ä–∫–∞ –∏ —Ç.–ø.)
    """
    data = message.web_app_data.data  # –¥–∞–Ω–Ω—ã–µ JSON-—Å—Ç—Ä–æ–∫–æ–π
    logging.info(f"üì¶ –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –∏–∑ WebApp: {data}")
    await message.answer(f"‚úÖ –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ: {data}")


# ===============================
# –û—Å–Ω–æ–≤–Ω–æ–π –∑–∞–ø—É—Å–∫
# ===============================
async def main():
    logging.info("üöÄ Gifts Battle Bot –∑–∞–ø—É—â–µ–Ω!")
    await dp.start_polling(bot)


if __name__ == "__main__":
    try:
        asyncio.run(main())
    except (KeyboardInterrupt, SystemExit):
        logging.info("‚õîÔ∏è –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")
